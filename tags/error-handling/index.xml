<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Error-Handling on 승예's Blog</title><link>https://seungyeah.github.io/tags/error-handling/</link><description>Recent content in Error-Handling on 승예's Blog</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Mon, 18 Aug 2025 04:03:45 +0900</lastBuildDate><atom:link href="https://seungyeah.github.io/tags/error-handling/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust 에러 처리</title><link>https://seungyeah.github.io/posts/rust-post-8/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate><guid>https://seungyeah.github.io/posts/rust-post-8/</guid><description>&lt;h2 id="panic과-복구-불가능한-에러">panic!과 복구 불가능한 에러&lt;/h2>
&lt;p>프로그램이 복구할 수 없는 상태에 도달했을 때 &lt;code>panic!&lt;/code> 매크로를 사용합니다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">panic!&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;crash and burn&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="result를-이용한-복구-가능한-에러">Result를 이용한 복구 가능한 에러&lt;/h2>
&lt;p>대부분의 에러는 복구 가능하며, &lt;code>Result&amp;lt;T, E&amp;gt;&lt;/code> 열거형을 사용합니다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::fs::File;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> f &lt;span style="color:#f92672">=&lt;/span> File::open(&lt;span style="color:#e6db74">&amp;#34;hello.txt&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> f &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">match&lt;/span> f {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ok(file) &lt;span style="color:#f92672">=&amp;gt;&lt;/span> file,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Err(error) &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">panic!&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;파일을 열 수 없습니다: &lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-연산자">? 연산자&lt;/h2>
&lt;p>&lt;code>?&lt;/code> 연산자를 사용하면 에러 처리를 간단하게 할 수 있습니다.&lt;/p></description></item></channel></rss>